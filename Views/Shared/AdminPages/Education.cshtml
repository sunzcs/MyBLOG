@model myblog.Models.Education

@{
    ViewBag.Title = "Hakkımda";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<title>Hakkımda</title>

 <style>
            table {
                width: 60%;
                border-collapse: separate;
                border-spacing: 0;
                margin-bottom: 20px;
                background: #fff;
                box-shadow: 0 4px 24px rgba(0,0,0,0.10), 0 1.5px 4px rgba(0,0,0,0.08);
                border-radius: 16px;
                overflow: hidden;
                font-family: 'Nunito', 'Roboto', sans-serif;
            }
            th {
                background: linear-gradient(90deg, #007bff 60%, #00c6ff 100%);
                color: #fff;
                font-size: 1.1rem;
                font-weight: 700;
                letter-spacing: 1px;
                border: none;
                padding: 16px 12px;
                text-align: left;
            }
            td {
                border: none;
                padding: 14px 12px;
                font-size: 1rem;
                color: #222;
                background: #f8f9fa;
                transition: background 0.2s;
            }
            tr {
                border-bottom: 1px solid #eaeaea;
            }
            tr:last-child td {
                border-bottom: none;
            }
            tr:hover td {
                background: #e3f0ff;
            }
            button {
                padding: 10px 22px;
                font-size: 17px;
                background: linear-gradient(90deg, #007bff 60%, #00c6ff 100%);
                color: white;
                border-radius: 8px;
                border: none;
                box-shadow: 0 2px 8px rgba(0,0,0,0.08);
                cursor: pointer;
                font-weight: 600;
                letter-spacing: 0.5px;
                transition: background 0.2s, box-shadow 0.2s;
            }
            button:hover {
                background: linear-gradient(90deg, #0056b3 60%, #007bff 100%);
                box-shadow: 0 4px 16px rgba(0,0,0,0.12);
            }
            .modal-backdrop {
                display: none !important;
            }
            .modal {
                background-color: transparent;
            }
            .modal-title {
                font-weight: 700;
                color: #007bff;
                letter-spacing: 1px;
            }
</style>

<body>

    <table class="table">
            <thead>
                <tr>
                    <th>Tablo sütunları</th>
                    <th>DEĞERLER</th>
                </tr>
            </thead>
            <tbody>
            
                <tr><td>SCName</td><td id="education-SCName">@Model.SCName</td></tr>
                <tr><td>SCStatement</td><td id="education-SCStatement">@Model.SCStatement</td></tr>
                <tr><td>SCStartdate</td><td id="education-SCStartdate">@Model.SCStartdate.ToString("yyyy-MM-dd")</td></tr>
                <tr><td>SCFinishdate</td><td id="education-SCFinishdate">@Model.SCFinishdate.ToString("yyyy-MM-dd")</td></tr>



            </tbody>
        </table>

        <button type="button" class="btn btn-primary edit-btn" id="editBtn">Düzenle</button>


                                                @*Düzeltme için modal ksımı*@
    <div class="modal" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true" data-bs-backdrop="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Tüm Bilgileri Düzenle</h5>
                </div>
                <div class="modal-body">
                    <input class="form-control mb-2" id="input-SCName" placeholder="SCName">
                    <input class="form-control mb-2" id="input-SCStatement" placeholder="SCStatement">
                    <input type="date" class="form-control mb-2" id="input-SCStartdate" placeholder="SCStartdate">
                    <input type="date" class="form-control mb-2" id="input-SCFinishdate" placeholder="SCFinishdate">
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                    <button class="btn btn-primary" id="saveAllChanges">Kaydet</button>
                </div>
            </div>
        </div>
    </div>


                                        @*Veri tabanına veri yollamak*@
    <script>
document.addEventListener('DOMContentLoaded', function () {
    const modal = new bootstrap.Modal(document.getElementById('editModal'));

    document.getElementById('editBtn').addEventListener('click', () => {
        // Diğer alanları al
        document.getElementById('input-SCName').value = document.getElementById('education-SCName').textContent.trim();
        document.getElementById('input-SCStatement').value = document.getElementById('education-SCStatement').textContent.trim();

        // SCStartdate için güvenli biçimde al
        let rawStart = document.getElementById('education-SCStartdate').textContent.trim();
        let parsedStart = new Date(rawStart);
        let formattedStart = !isNaN(parsedStart) ? parsedStart.toISOString().split('T')[0] : "";
        document.getElementById('input-SCStartdate').value = formattedStart;

        // SCFinishdate için güvenli biçimde al
        let rawFinish = document.getElementById('education-SCFinishdate').textContent.trim();
        let parsedFinish = new Date(rawFinish);
        let formattedFinish = !isNaN(parsedFinish) ? parsedFinish.toISOString().split('T')[0] : "";
        document.getElementById('input-SCFinishdate').value = formattedFinish;

        // Modalı aç
        modal.show();
    });

    // Kaydet butonuna tıklandığında veriyi gönder
    document.getElementById('saveAllChanges').addEventListener('click', () => {
        const data = {
            EducationId: 3, // Gerekirse dinamik al (data-id gibi)
            SCName: document.getElementById('input-SCName').value.trim(),
            SCStatement: document.getElementById('input-SCStatement').value.trim(),
            SCStartdate: document.getElementById('input-SCStartdate').value,
            SCFinishdate: document.getElementById('input-SCFinishdate').value
        };

        fetch('/Educations/UpdateAll', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data)
        })
        .then(res => res.json())
        .then(response => {
            if (!response.success) {
                alert(response.message || "Hata oluştu.");
                return;
            }

            // Sayfada bilgileri güncelle
            document.getElementById('education-SCName').textContent = data.SCName;
            document.getElementById('education-SCStatement').textContent = data.SCStatement;
            document.getElementById('education-SCStartdate').textContent = data.SCStartdate;
            document.getElementById('education-SCFinishdate').textContent = data.SCFinishdate;

            modal.hide();
        })
        .catch(err => {
            console.error("Sunucu hatası:", err);
            alert("Sunucu hatası: " + err.message);
        });
    });
});
</script>



        
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    </body>