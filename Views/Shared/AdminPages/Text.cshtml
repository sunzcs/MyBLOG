@model myblog.Models.Text
@{
    ViewBag.Title = "Text";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

        <title>Becerilerim</title>
<style>
    table {
        width: 60%;
        border-collapse: separate;
        border-spacing: 0;
        margin-bottom: 20px;
        background: #fff;
        box-shadow: 0 4px 24px rgba(0,0,0,0.10), 0 1.5px 4px rgba(0,0,0,0.08);
        border-radius: 16px;
        overflow: hidden;
        font-family: 'Nunito', 'Roboto', sans-serif;
    }
    th {
        background: linear-gradient(90deg, #007bff 60%, #00c6ff 100%);
        color: #fff;
        font-size: 1.1rem;
        font-weight: 700;
        letter-spacing: 1px;
        border: none;
        padding: 16px 12px;
        text-align: left;
    }
    td {
        border: none;
        padding: 14px 12px;
        font-size: 1rem;
        color: #222;
        background: #f8f9fa;
        transition: background 0.2s;
    }
    tr {
        border-bottom: 1px solid #eaeaea;
    }
    tr:last-child td {
        border-bottom: none;
    }
    tr:hover td {
        background: #e3f0ff;
    }
    button {
        padding: 10px 22px;
        font-size: 17px;
        background: linear-gradient(90deg, #007bff 60%, #00c6ff 100%);
        color: white;
        border-radius: 8px;
        border: none;
        box-shadow: 0 2px 8px rgba(0,0,0,0.08);
        cursor: pointer;
        font-weight: 600;
        letter-spacing: 0.5px;
        transition: background 0.2s, box-shadow 0.2s;
    }
    button:hover {
        background: linear-gradient(90deg, #0056b3 60%, #007bff 100%);
        box-shadow: 0 4px 16px rgba(0,0,0,0.12);
    }
    .modal-title {
        font-weight: 700;
        color: #007bff;
        letter-spacing: 1px;
    }
</style>

<body>

    <table class="table">
            <thead>
                <tr>
                    <th>Tablo sütunları</th>
                    <th>DEĞERLER</th>
                </tr>
            </thead>
            <tbody>
                <tr><td>Text1</td><td id="Text-Text1">@Model.Text1</td></tr>
                <tr><td>Text2</td><td id="Text-Text2">@Model.Text2</td></tr>
                <tr><td>Text3</td><td id="Text-Text3">@Model.Text3</td></tr>
            </tbody>
        </table>

        <button type="button" class="btn btn-primary edit-btn" id="editBtn">Düzenle</button>


                                                @*Düzeltme için modal ksımı*@
    <div class="modal" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true" data-bs-backdrop="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Tüm Bilgileri Düzenle</h5>
                </div>
                <div class="modal-body">
                <textarea class="form-control mb-2" id="input-Text1" placeholder="Metin 1" rows="3"></textarea>
                <textarea class="form-control mb-2" id="input-Text2" placeholder="Metin 2" rows="3"></textarea>
                <textarea class="form-control mb-2" id="input-Text3" placeholder="Metin 3" rows="3"></textarea>
                </div>

                <div class="modal-footer">
                    <button class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                    <button class="btn btn-primary" id="saveAllChanges">Kaydet</button>
                </div>
            </div>
        </div>
    </div>


                                        @*Veri tabanına veri yollamak*@
    <script>
    document.addEventListener('DOMContentLoaded', function () {
        const modal = new bootstrap.Modal(document.getElementById('editModal'));

        // Modalı aç
            document.getElementById('editBtn').addEventListener('click', () => {
            document.getElementById('input-Text1').value = document.getElementById('Text-Text1').textContent.trim();
            document.getElementById('input-Text2').value = document.getElementById('Text-Text2').textContent.trim();
            document.getElementById('input-Text3').value = document.getElementById('Text-Text3').textContent.trim();
            

            modal.show();
        });

        // Kaydet butonuna basılınca tüm verileri gönder
        document.getElementById('saveAllChanges').addEventListener('click', () => {
            const data = {
                TextId: 1, // ID sabit
                Text1: document.getElementById('input-Text1').value.trim(),
                Text2: document.getElementById('input-Text2').value.trim(),
                Text3: document.getElementById('input-Text3').value.trim(),
            };

            fetch('/Text/UpdateAll', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            })
            .then(res => res.json())
            .then(response => {
                if (!response.success) {
                    alert(response.message || "Bilinmeyen bir hata oluştu.");
                    return;
                }

                document.getElementById('Text-Text1').textContent = data.Text1;
                document.getElementById('Text-Text2').textContent = data.Text2;
                document.getElementById('Text-Text3').textContent = data.Text3;

                modal.hide();
            })
            .catch(err => alert("Sunucu hatası: " + err.message));
        });
    });
</script>

</body>
